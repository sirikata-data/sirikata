--- src/video/x11/SDL_x11window.c	2009-03-16 20:44:52.000000000 -0700
+++ ../../SDL-1.3.0-4460/src/video/x11/SDL_x11window.c	2009-04-23 23:16:33.000000000 -0700
@@ -717,12 +717,83 @@
 X11_CreateWindowFrom(_THIS, SDL_Window * window, const void *data)
 {
     Window w = (Window) data;
-
+    XWMHints *wmhints;
+    XClassHint *classhints;
+    SDL_VideoData *vddata = (SDL_VideoData *) _this->driverdata;
     /* FIXME: Query the title from the existing window */
 
+    /* Set the input hints so we get keyboard input */
+    wmhints = XAllocWMHints();
+    if (wmhints) {
+        wmhints->input = True;
+        wmhints->flags = InputHint;
+        XSetWMHints(vddata->display, w, wmhints);
+        XFree(wmhints);
+    }
+
+    /* Set the class hints so we can get an icon (AfterStep) */
+    classhints = XAllocClassHint();
+    if (classhints != NULL) {
+        classhints->res_name = vddata->classname;
+        classhints->res_class = vddata->classname;
+        XSetClassHint(vddata->display, w, classhints);
+        XFree(classhints);
+    }
+
+    /* Allow the window to be deleted by the window manager */
+    XSetWMProtocols(vddata->display, w, &vddata->WM_DELETE_WINDOW, 1);
+
     if (SetupWindowData(_this, window, w, SDL_FALSE) < 0) {
         return -1;
     }
+#ifdef X_HAVE_UTF8_STRING
+    {
+        Uint32 fevent = 0;
+        pXGetICValues(((SDL_WindowData *) window->driverdata)->ic,
+                      XNFilterEvents, &fevent, NULL);
+        XSelectInput(vddata->display, w,
+                     (FocusChangeMask | EnterWindowMask | LeaveWindowMask |
+                      ExposureMask | ButtonPressMask | ButtonReleaseMask |
+                      PointerMotionMask | KeyPressMask | KeyReleaseMask |
+                      PropertyChangeMask | StructureNotifyMask |
+                      KeymapStateMask | fevent));
+    }
+#else
+    {
+        XSelectInput(vddata->display, w,
+                     (FocusChangeMask | EnterWindowMask | LeaveWindowMask |
+                      ExposureMask | ButtonPressMask | ButtonReleaseMask |
+                      PointerMotionMask | KeyPressMask | KeyReleaseMask |
+                      PropertyChangeMask | StructureNotifyMask |
+                      KeymapStateMask));
+    }
+#endif
+
+#if SDL_VIDEO_DRIVER_X11_XINPUT
+    /* we're informing the display what extension events we want to receive from it */
+    {
+        int i, j, n = 0;
+        XEventClass xevents[256];
+
+        for (i = 0; i < SDL_GetNumMice(); ++i) {
+            SDL_Mouse *mouse;
+            X11_MouseData *data;
+
+            mouse = SDL_GetMouse(i);
+            data = (X11_MouseData *) mouse->driverdata;
+            if (!data) {
+                continue;
+            }
+
+            for (j = 0; j < data->num_xevents; ++j) {
+                xevents[n++] = data->xevents[j];
+            }
+        }
+        if (n > 0) {
+            XSelectExtensionEvent(vddata->display, w, xevents, n);
+        }
+    }
+#endif
     return 0;
 }
 
